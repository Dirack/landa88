from rsf.proj import *

# Main Files
trueModel='trueModel'
stackedSection='stackedSection'
parametersCube='parametersCube'
dataCube='dataCube'
interpolatedDataCube='interpolatedDataCube2'

# VFSA Parameters
v0 = float(ARGUMENTS.get('v0',1.5))
ot0 = float(ARGUMENTS.get('ot0',0.3))
dt0 = float(ARGUMENTS.get('dt0',0.004))
nt0 = int(ARGUMENTS.get('nt0',451))
dm0 = float(ARGUMENTS.get('dm0',0.00625))
om0 = float(ARGUMENTS.get('om0',1.5))
nm0 = int(ARGUMENTS.get('nm0',962))
aperture = int(ARGUMENTS.get('aperture',35))
cds = bool(ARGUMENTS.get('cds',False))

Flow('parametersCube4',parametersCube,
        '''
        put label2=t0 label3=m0 unit2=Km unit3=Km
        n2=%d d2=%g o2=%g n3=%d d3=%g o3=%g |
	transp plane=12 | transp plane=23 |
	smooth rect1=2 rect2=2
        '''%(nt0,dt0,ot0,nm0,dm0,om0))

Flow('creTrajectories',[interpolatedDataCube,'parametersCube4'],
	'''
	cretrajec param=${SOURCES[1]} verb=y 
	''')

Flow('cretimecurves',['creTrajectories','parametersCube4'],
	'''
	getcretimecurve param=${SOURCES[1]} verb=y v0=%g
	'''%(v0))

Flow(stackedSection,[interpolatedDataCube,'creTrajectories','cretimecurves'],
	'''
	getcreandstack cremh=${SOURCES[1]} timeCurves=${SOURCES[2]} aperture=%d verb=y
	''' % (aperture))

Flow('stackedSectionDecon',stackedSection,
	'''
	bandpass fhi=50 flo=10 |
	fxdecon lenf=4 verb=y n2w=962 fmin=5 fmax=125 |
	agc
       ''')

Plot('stackedSectionDecon','grey title="Stacked Section"')

Plot('zeroOffset_orig','grey title="Original Section"')
Plot('zeroOffset_interp','agc | grey title="Interpolated Section"')

Result('result',['zeroOffset_interp','stackedSectionDecon'],'SideBySideIso')

End()
